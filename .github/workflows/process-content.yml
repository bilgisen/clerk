name: Build and Publish EPUB

on:
  workflow_dispatch:
    inputs:
      content_id:
        description: 'Content ID for the book'
        required: true
        type: string
      format:
        description: 'Output format (epub, mobi, pdf, html, docx)'
        required: true
        default: 'epub'
        type: string
      metadata:
        description: 'Additional metadata as JSON string'
        required: false
        default: '{}'
        type: string

env:
  NEXT_PUBLIC_APP_URL: ${{ vars.NEXT_PUBLIC_APP_URL || 'https://matbu.vercel.app' }}
  NODE_ENV: production
  JWT_ISSUER: 'https://sunny-dogfish-14.clerk.accounts.dev'
  JWT_AUDIENCE: 'https://sunny-dogfish-14.clerk.accounts.dev'
  CLERK_KEY_ID: 'jtmp_310Eh03rhbpy3wXWHcIaNkwwTpj'
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PRIVATE_KEY_B64: ${{ secrets.PRIVATE_KEY_B64 }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPO_OWNER: bilgisen
  GITHUB_REPO_NAME: clerk

jobs:
  build-epub:
    name: Build EPUB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm install jose

      - name: Install system tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-latex-recommended \
            jq \
            wget \
            parallel

      - name: Decode private.pem
        run: |
          echo "${{ secrets.PRIVATE_KEY_B64 }}" | base64 --decode > private.pem
        shell: bash

      - name: Generate JWT Token with matbu template
        id: generate-token
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_ISSUER: ${{ env.JWT_ISSUER }}
          JWT_AUDIENCE: ${{ env.JWT_AUDIENCE }}
        run: |
          echo "ğŸ”‘ Generating JWT token..."
          node --experimental-modules scripts/generate-jwt.mjs

          if [ ! -f "jwt-token.txt" ]; then
            echo "::error::JWT token file not found"
            exit 1
          fi

          JWT_TOKEN=$(cat jwt-token.txt)
          echo "JWT_TOKEN=$JWT_TOKEN" >> $GITHUB_ENV
          echo "JWT_HEADER=Bearer $JWT_TOKEN" >> $GITHUB_ENV

      # DiÄŸer adÄ±mlar burada devam eder...
