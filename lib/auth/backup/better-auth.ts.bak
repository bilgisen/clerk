import { betterAuth } from 'better-auth';
import { db } from '@/db';
import { users } from '@/db/schema';
import { eq } from 'drizzle-orm';

export const auth = betterAuth({
  database: db,
  
  // Enable email/password authentication
  emailAndPassword: {
    enabled: true,
  },
  
  // Enable GitHub OIDC
  socialProviders: {
    github: {
      clientId: process.env.GITHUB_CLIENT_ID!,
      clientSecret: process.env.GITHUB_CLIENT_SECRET!,
    },
  },
  
  // Session configuration
  session: {
    maxAge: 60 * 60 * 24 * 7, // 1 week
    updateAge: 60 * 60 * 24, // 1 day
  },
  
  // Callbacks
  callbacks: {
    async signIn({ user, account, profile }) {
      // Check if user exists in your database
      const existingUser = await db.query.users.findFirst({
        where: eq(users.email, user.email!)
      });

      if (!existingUser) {
        // Create new user in your database
        await db.insert(users).values({
          email: user.email!,
          firstName: user.name?.split(' ')[0] || '',
          lastName: user.name?.split(' ').slice(1).join(' ') || '',
          imageUrl: user.image || '',
          isActive: true,
        });
      }
      
      return true;
    },
    
    async session({ session, token }) {
      // Add custom session data
      if (session.user) {
        const dbUser = await db.query.users.findFirst({
          where: eq(users.email, session.user.email!)
        });
        
        if (dbUser) {
          session.user.id = dbUser.id;
          session.user.role = dbUser.role;
        }
      }
      
      return session;
    },
  },
});

export type { Session } from 'better-auth';

export async function getAuth() {
  const session = await auth.getSession();
  if (!session) return null;
  
  const user = await db.query.users.findFirst({
    where: eq(users.email, session.user.email!)
  });
  
  if (!user) return null;
  
  return {
    userId: user.id,
    user: {
      id: user.id,
      email: user.email,
      name: [user.firstName, user.lastName].filter(Boolean).join(' '),
      firstName: user.firstName,
      lastName: user.lastName,
      role: user.role,
      imageUrl: user.imageUrl,
    },
  };
}
